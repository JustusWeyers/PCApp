name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  # publish_image:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3
  #     - name: build
  #       run: 
  #         docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/pcapp:latest .
  #     - name: login
  #       run:
  #         docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: push
  #       run:
  #         docker push ${{ secrets.DOCKERHUB_USERNAME }}/pcapp:latest

  deploy_webapp:
    # needs: [publish_image]
    runs-on: self-hosted
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: set application
        run: echo '${{ secrets.SUDO }}' | sudo -S cp application.yml /etc/shinyproxy/application.yml

      - name: request application properties
        run: |
          echo '${{ secrets.SUDO }}' | sudo -S cat /dev/null > application.properties\
          echo '${{ secrets.SUDO }}' | sudo -S printf 'PORT=${{ secrets.PROP_PORT }}' >> application.properties\
          echo '${{ secrets.SUDO }}' | sudo -S printf 'TITLE=${{ secrets.PROP_TITLE }}' >> application.properties\
          echo '${{ secrets.SUDO }}' | sudo -S printf 'USER1NAME=${{ secrets.PROP_USER1NAME }}' >> application.properties\
          echo '${{ secrets.SUDO }}' | sudo -S printf 'USER1PASSWORD=${{ secrets.PROP_USER1PASSWORD }}' >> application.properties\
          echo '${{ secrets.SUDO }}' | sudo -S printf 'USER2NAME=${{ secrets.PROP_USER2NAME }}' >> application.properties\
          echo '${{ secrets.SUDO }}' | sudo -S printf 'USER2PASSWORD=${{ secrets.PROP_USER2PASSWORD }}' >> application.properties
      - name: write application properties
        run: |
          echo '${{ secrets.SUDO }}' | sudo -S cp application.properties /etc/shinyproxy/application.properties\
          echo '${{ secrets.SUDO }}' | sudo -S rm application.yml

      - name: request container environment
        run: |
          echo '${{ secrets.SUDO }}' | sudo -S cat /dev/null > .env\
          echo '${{ secrets.SUDO }}' | sudo -S printf 'PORT=${{ secrets.ENV_DBIP }}' >> .env\
          echo '${{ secrets.SUDO }}' | sudo -S printf 'USER1DBPASS=${{ secrets.ENV_USER1DBPASS }}' >> .env\
          echo '${{ secrets.SUDO }}' | sudo -S printf 'USER2DBPASS=${{ secrets.ENV_USER2DBPASS }}' >> .env
      - name: write application properties
        run: | 
          echo '${{ secrets.SUDO }}' | sudo -S cp .env /etc/shinyproxy/.env\
          echo '${{ secrets.SUDO }}' | sudo -S rm .env

      
      # - name: pull webapp
      #   run: docker pull justusweyers/pcapp:latest
      - name: restart shinyproxy
        run: echo '${{ secrets.SUDO }}' | sudo -S service shinyproxy restart
      - name: clean up
        run: history -c
